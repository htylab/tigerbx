name: Compile7

on:
  workflow_dispatch:

permissions:
  contents: write     # 建立 Release 需要

jobs:
# ============================================================
# 1. Build ── 針對三大 OS 編譯並產生可執行檔（不手動 zip）
# ============================================================
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        py: ['tiger']           # 主要執行入口 (tiger.py)
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Derive short commit SHA
      id: vars
      shell: bash
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install pyinstaller onnxruntime

    - name: PyInstaller
      shell: bash
      run: |
        pyinstaller -c -p ./tigerbx \
          --additional-hooks-dir=./pyinstaller_hooks \
          --icon=./tigerbx/exe/ico.ico \
          -F ./tigerbx/${{ matrix.py }}.py

    - name: Prepare release folder
      shell: bash
      run: |
        mkdir release
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          cp dist/* release/
        else
          mv dist/* release/
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.os }}-${{ env.SHORT_SHA }}
        path: release/

# ============================================================
# 2. Release ── 把各 OS 資料夾一次打包成 ZIP 上傳
# ============================================================
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts          # 保留各自目錄；不指定 merge-multiple

    - name: List downloaded files
      run: |
        echo "=== artifacts/ 內容 ==="
        tree -L 2 artifacts || true

    - name: Create draft GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ github.run_number }}
        name: Release ${{ github.run_number }}
        draft: true
        # ⬇️ 直接把三個 OS 的目錄交給 release-action；它會各自打成 zip
        artifacts: artifacts/release-*
        token: ${{ secrets.GITHUB_TOKEN }}
